[91m2022-03-27 01:30:14 W/: HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:349)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:349)
	at net.mamoe.mirai.internal.network.handler.NetworkHandlerSupport.setStateImpl$mirai_core(NetworkHandlerSupport.kt:251)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:395)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:348)
	at net.mamoe.mirai.internal.network.components.TimeBasedHeartbeatSchedulerImpl$launchHeartbeatJobAsync$1.invokeSuspend(HeartbeatScheduler.kt:108)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:750)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:678)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:665)
Caused by: PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	... 13 more
Caused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms
	at kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:184)
	at kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:154)
	at kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:502)
	at kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:279)
	at kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)
	at java.base/java.lang.Thread.run(Unknown Source)
[0m
[0m2022-03-27 01:30:15 V/: Loading server list from cache.[0m
[92m2022-03-27 01:30:15 I/: Server list: 49.7.253.58:80, 49.7.253.162:80, 58.212.179.34:8080, 180.109.52.200:8080, 183.47.101.221:443, 101.91.40.121:14000, 49.7.253.141:8080, 42.81.184.206:8080, msfwifi.3g.qq.com:8080, 183.47.101.173:443.[0m
[92m2022-03-27 01:30:15 I/: ECDH key is valid.[0m
[0m2022-03-27 01:30:16 V/: Send: wtlogin.exchange_emp[0m
[0m2022-03-27 01:30:17 V/: Recv: wtlogin.exchange_emp[0m
[0m2022-03-27 01:30:17 V/: Send: StatSvc.register(online)[0m
[92m2022-03-27 01:30:18 I/: Server time updated, serverTime: 1648344617, diff: -1ms=-0.001s[0m
[0m2022-03-27 01:30:18 V/: Recv: StatSvc.register[0m
[92m2022-03-27 01:30:18 I/: Scheduled key refresh in 23h 55min 0.0s.[0m
[92m2022-03-27 01:30:18 I/: Scheduled refresh login session in 19d 23h 55min 0.0s.[0m
[92m2022-03-27 01:30:21 I/: Server list: 113.96.18.168:443, msfwifi.3g.qq.com:8080, 49.7.253.120:8080, 180.163.212.180:8080, 183.2.144.33:443, 180.102.191.97:8080, 49.7.253.141:80, 49.7.253.58:80, 58.212.179.185:14000, 49.7.253.65:8080.[0m
[0m2022-03-27 01:30:21 V/: Saving bdh session to cache[0m
[0m2022-03-27 01:30:21 V/: Saving bdh session to cache[0m
[0m2022-03-27 01:30:22 V/: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2022-03-27 01:30:22 V/: Saving server list to cache[0m
[0m2022-03-27 01:30:22 V/: Recv: ConfigPushSvc.PushReq[0m
[0m2022-03-27 01:30:23 V/: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2022-03-27 01:30:24 V/: Recv: ConfigPushSvc.PushReq[0m
[91m2022-03-27 05:30:46 W/: HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:349)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:349)
	at net.mamoe.mirai.internal.network.handler.NetworkHandlerSupport.setStateImpl$mirai_core(NetworkHandlerSupport.kt:251)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:395)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:348)
	at net.mamoe.mirai.internal.network.components.TimeBasedHeartbeatSchedulerImpl$launchHeartbeatJobAsync$1.invokeSuspend(HeartbeatScheduler.kt:108)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:750)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:678)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:665)
Caused by: PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	... 13 more
Caused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms
	at kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:184)
	at kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:154)
	at kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:502)
	at kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:279)
	at kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)
	at java.base/java.lang.Thread.run(Unknown Source)
[0m
[0m2022-03-27 05:30:46 V/: Loading server list from cache.[0m
[92m2022-03-27 05:30:46 I/: Server list: 113.96.18.168:443, msfwifi.3g.qq.com:8080, 49.7.253.120:8080, 180.163.212.180:8080, 183.2.144.33:443, 180.102.191.97:8080, 49.7.253.141:80, 49.7.253.58:80, 58.212.179.185:14000, 49.7.253.65:8080.[0m
[92m2022-03-27 05:30:46 I/: ECDH key is valid.[0m
[0m2022-03-27 05:30:46 V/: Send: wtlogin.exchange_emp[0m
[31m2022-03-27 05:30:46 E/: Exception in decoding packet.
java.lang.IllegalStateException: Cannot find error message, unknown login result type: 180, TLVMap = {353=[B@e62747e6}
	at net.mamoe.mirai.internal.network.protocol.packet.login.WtLogin$Login.decode(WtLogin.kt:188)
	at net.mamoe.mirai.internal.network.protocol.packet.login.WtLogin$ExchangeEmp.decode(WtLogin.kt:546)
	at net.mamoe.mirai.internal.network.components.PacketCodecImpl.processBody(PacketCodec.kt:368)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$PacketDecodePipeline$send$1.invokeSuspend(NettyNetworkHandler.kt:175)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Unknown Source)
[0m
[0m2022-03-27 05:30:46 V/: Send: wtlogin.login[0m
[31m2022-03-27 05:30:46 E/: Exception in decoding packet.
java.lang.IllegalStateException: Cannot find error message, unknown login result type: 180, TLVMap = {353=[B@e8c03c6a}
	at net.mamoe.mirai.internal.network.protocol.packet.login.WtLogin$Login.decode(WtLogin.kt:188)
	at net.mamoe.mirai.internal.network.components.PacketCodecImpl.processBody(PacketCodec.kt:368)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$PacketDecodePipeline$send$1.invokeSuspend(NettyNetworkHandler.kt:175)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Unknown Source)
[0m
[91m2022-03-27 05:30:46 W/: java.lang.IllegalStateException: Cannot find error message, unknown login result type: 180, TLVMap = {353=[B@e8c03c6a}
java.lang.IllegalStateException: Cannot find error message, unknown login result type: 180, TLVMap = {353=[B@e8c03c6a}
	at net.mamoe.mirai.internal.network.protocol.packet.login.WtLogin$Login.decode(WtLogin.kt:188)
	at net.mamoe.mirai.internal.network.components.PacketCodecImpl.processBody(PacketCodec.kt:368)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$PacketDecodePipeline$send$1.invokeSuspend(NettyNetworkHandler.kt:175)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Unknown Source)
	Suppressed: java.lang.IllegalStateException: Cannot find error message, unknown login result type: 180, TLVMap = {353=[B@e62747e6}
		at net.mamoe.mirai.internal.network.protocol.packet.login.WtLogin$Login.decode(WtLogin.kt:188)
		at net.mamoe.mirai.internal.network.protocol.packet.login.WtLogin$ExchangeEmp.decode(WtLogin.kt:546)
		... 11 more
[0m
[0m2022-03-27 06:04:30 V/: Loading server list from cache.[0m
[92m2022-03-27 06:04:30 I/: Server list: 113.96.18.168:443, msfwifi.3g.qq.com:8080, 49.7.253.120:8080, 180.163.212.180:8080, 183.2.144.33:443, 180.102.191.97:8080, 49.7.253.141:80, 49.7.253.58:80, 58.212.179.185:14000, 49.7.253.65:8080.[0m
[92m2022-03-27 06:04:30 I/: ECDH key is valid.[0m
[0m2022-03-27 06:04:30 V/: Send: wtlogin.exchange_emp[0m
[0m2022-03-27 06:04:30 V/: Recv: wtlogin.exchange_emp[0m
[0m2022-03-27 06:04:30 V/: Send: StatSvc.register(online)[0m
[92m2022-03-27 06:04:31 I/: Server time updated, serverTime: 1648361070, diff: -1ms=-0.001s[0m
[92m2022-03-27 06:04:31 I/: Scheduled key refresh in 23h 55min 0.0s.[0m
[92m2022-03-27 06:04:31 I/: Scheduled refresh login session in 19d 23h 55min 0.0s.[0m
[0m2022-03-27 06:04:31 V/: Recv: StatSvc.register[0m
[92m2022-03-27 06:04:33 I/: Server list: 49.7.253.141:80, 183.47.98.90:443, 101.91.37.242:8080, msfwifi.3g.qq.com:8080, 49.7.253.88:8080, 180.163.212.164:14000, 49.7.253.220:80, 101.91.40.60:8080, 119.147.190.138:443, 49.7.253.189:8080.[0m
[0m2022-03-27 06:04:33 V/: Saving bdh session to cache[0m
[0m2022-03-27 06:04:33 V/: Saving server list to cache[0m
[0m2022-03-27 06:04:33 V/: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2022-03-27 06:04:33 V/: Recv: ConfigPushSvc.PushReq[0m
[0m2022-03-27 06:04:33 V/: Saving bdh session to cache[0m
[0m2022-03-27 06:04:33 V/: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2022-03-27 06:04:33 V/: Recv: ConfigPushSvc.PushReq[0m
[91m2022-03-27 07:43:55 W/: HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:349)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:349)
	at net.mamoe.mirai.internal.network.handler.NetworkHandlerSupport.setStateImpl$mirai_core(NetworkHandlerSupport.kt:251)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:395)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:348)
	at net.mamoe.mirai.internal.network.components.TimeBasedHeartbeatSchedulerImpl$launchHeartbeatJobAsync$1.invokeSuspend(HeartbeatScheduler.kt:108)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:750)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:678)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:665)
Caused by: PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	... 13 more
Caused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms
	at kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:184)
	at kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:154)
	at kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:502)
	at kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:279)
	at kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)
	at java.base/java.lang.Thread.run(Unknown Source)
[0m
[0m2022-03-27 07:43:55 V/: Loading server list from cache.[0m
[92m2022-03-27 07:43:55 I/: Server list: 49.7.253.141:80, 183.47.98.90:443, 101.91.37.242:8080, msfwifi.3g.qq.com:8080, 49.7.253.88:8080, 180.163.212.164:14000, 49.7.253.220:80, 101.91.40.60:8080, 119.147.190.138:443, 49.7.253.189:8080.[0m
[92m2022-03-27 07:43:55 I/: ECDH key is valid.[0m
[0m2022-03-27 07:43:55 V/: Send: wtlogin.exchange_emp[0m
[0m2022-03-27 07:43:55 V/: Recv: wtlogin.exchange_emp[0m
[0m2022-03-27 07:43:55 V/: Send: StatSvc.register(online)[0m
[92m2022-03-27 07:43:56 I/: Server time updated, serverTime: 1648367035, diff: -1ms=-0.001s[0m
[92m2022-03-27 07:43:56 I/: Scheduled key refresh in 23h 55min 0.0s.[0m
[92m2022-03-27 07:43:56 I/: Scheduled refresh login session in 19d 23h 55min 0.0s.[0m
[0m2022-03-27 07:43:56 V/: Recv: StatSvc.register[0m
[92m2022-03-27 07:43:59 I/: Server list: 14.22.9.53:443, 101.91.37.175:8080, 49.7.253.116:80, 114.222.113.249:8080, 49.7.253.220:8080, msfwifi.3g.qq.com:8080, 42.81.184.82:8080, 183.47.102.254:443, 101.91.40.121:14000, 49.7.253.116:80.[0m
[0m2022-03-27 07:43:59 V/: Saving bdh session to cache[0m
[0m2022-03-27 07:43:59 V/: Saving server list to cache[0m
[0m2022-03-27 07:43:59 V/: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2022-03-27 07:43:59 V/: Recv: ConfigPushSvc.PushReq[0m
[0m2022-03-27 07:43:59 V/: Saving bdh session to cache[0m
[0m2022-03-27 07:43:59 V/: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2022-03-27 07:43:59 V/: Recv: ConfigPushSvc.PushReq[0m
[91m2022-03-27 11:23:18 W/: HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:349)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:349)
	at net.mamoe.mirai.internal.network.handler.NetworkHandlerSupport.setStateImpl$mirai_core(NetworkHandlerSupport.kt:251)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:395)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:348)
	at net.mamoe.mirai.internal.network.components.TimeBasedHeartbeatSchedulerImpl$launchHeartbeatJobAsync$1.invokeSuspend(HeartbeatScheduler.kt:108)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:750)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:678)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:665)
Caused by: PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	... 13 more
Caused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms
	at kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:184)
	at kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:154)
	at kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:502)
	at kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:279)
	at kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)
	at java.base/java.lang.Thread.run(Unknown Source)
[0m
[0m2022-03-27 11:23:18 V/: Loading server list from cache.[0m
[92m2022-03-27 11:23:18 I/: Server list: 14.22.9.53:443, 101.91.37.175:8080, 49.7.253.116:80, 114.222.113.249:8080, 49.7.253.220:8080, msfwifi.3g.qq.com:8080, 42.81.184.82:8080, 183.47.102.254:443, 101.91.40.121:14000.[0m
[92m2022-03-27 11:23:18 I/: ECDH key is valid.[0m
[0m2022-03-27 11:23:18 V/: Send: wtlogin.exchange_emp[0m
[0m2022-03-27 11:23:18 V/: Recv: wtlogin.exchange_emp[0m
[0m2022-03-27 11:23:18 V/: Send: StatSvc.register(online)[0m
[92m2022-03-27 11:23:18 I/: Scheduled refresh login session in 19d 23h 55min 0.0s.[0m
[92m2022-03-27 11:23:18 I/: Scheduled key refresh in 23h 55min 0.0s.[0m
[92m2022-03-27 11:23:18 I/: Server time updated, serverTime: 1648380198, diff: 0ms=0.0s[0m
[0m2022-03-27 11:23:18 V/: Recv: StatSvc.register[0m
[92m2022-03-27 11:23:21 I/: Server list: 49.7.253.45:8080, 49.7.253.58:8080, 49.7.253.220:80, 183.47.102.218:443, 183.47.99.24:443, 180.109.52.200:8080, 180.163.212.180:14000, 49.7.253.215:80, 117.62.243.156:8080, msfwifi.3g.qq.com:8080.[0m
[0m2022-03-27 11:23:21 V/: Saving bdh session to cache[0m
[0m2022-03-27 11:23:21 V/: Saving server list to cache[0m
[0m2022-03-27 11:23:21 V/: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2022-03-27 11:23:21 V/: Recv: ConfigPushSvc.PushReq[0m
[0m2022-03-27 11:23:21 V/: Saving bdh session to cache[0m
[0m2022-03-27 11:23:21 V/: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2022-03-27 11:23:21 V/: Recv: ConfigPushSvc.PushReq[0m
[0m2022-03-27 11:29:07 V/Net 3237855048: Loading server list from cache.[0m
[92m2022-03-27 11:29:07 I/Net 3237855048: Server list: 49.7.253.45:8080, 49.7.253.58:8080, 49.7.253.220:80, 183.47.102.218:443, 183.47.99.24:443, 180.109.52.200:8080, 180.163.212.180:14000, 49.7.253.215:80, 117.62.243.156:8080, msfwifi.3g.qq.com:8080.[0m
[92m2022-03-27 11:29:07 I/Net 3237855048: ECDH key is valid.[0m
[0m2022-03-27 11:29:07 V/Net 3237855048: Send: wtlogin.exchange_emp[0m
[0m2022-03-27 11:29:07 V/Net 3237855048: Recv: wtlogin.exchange_emp[0m
[0m2022-03-27 11:29:07 V/Net 3237855048: Send: StatSvc.register(online)[0m
[92m2022-03-27 11:29:07 I/Net 3237855048: Server time updated, serverTime: 1648380547, diff: 0ms=0.0s[0m
[0m2022-03-27 11:29:07 V/Net 3237855048: Recv: StatSvc.register[0m
[92m2022-03-27 11:29:07 I/Net 3237855048: Syncing friend message history...[0m
[0m2022-03-27 11:29:07 V/Net 3237855048: Loading BdhSession from cache file[0m
[92m2022-03-27 11:29:07 I/Net 3237855048: Start loading friend list...[0m
[0m2022-03-27 11:29:07 V/Net 3237855048: Send: StatSvc.GetDevLoginInfo(StatSvc.GetDevLoginInfo)[0m
[92m2022-03-27 11:29:07 I/Net 3237855048: Start loading stranger list...[0m
[0m2022-03-27 11:29:07 V/Net 3237855048: Send: friendlist.getFriendGroupList(friendlist.getFriendGroupList)[0m
[0m2022-03-27 11:29:07 V/Net 3237855048: Send: OidbSvc.0x496(OidbSvc.0x496)[0m
[0m2022-03-27 11:29:07 V/Net 3237855048: Send: OidbSvc.0x5d2_0(OidbSvc.0x5d2_0)[0m
[0m2022-03-27 11:29:08 V/Net 3237855048: Recv: OidbSvc.0x5d2_0[0m
[92m2022-03-27 11:29:08 I/Net 3237855048: Successfully loaded stranger list: 0 in total[0m
[0m2022-03-27 11:29:08 V/Net 3237855048: Recv: StatSvc.GetDevLoginInfo[0m
[92m2022-03-27 11:29:08 I/Net 3237855048: No OtherClient online.[0m
[92m2022-03-27 11:29:08 I/Net 3237855048: Start loading group list...[0m
[0m2022-03-27 11:29:08 V/Net 3237855048: Recv: OidbSvc.0x496[0m
[0m2022-03-27 11:29:08 V/Net 3237855048: Send: friendlist.GetTroopListReqV2(friendlist.GetTroopListReqV2)[0m
[0m2022-03-27 11:29:08 V/Net 3237855048: Loading friend list: 4/4[0m
[0m2022-03-27 11:29:08 V/Net 3237855048: Recv: friendlist.getFriendGroupList[0m
[92m2022-03-27 11:29:08 I/Net 3237855048: Successfully loaded friend list: 4 in total[0m
[92m2022-03-27 11:29:08 I/Net 3237855048: Syncing friend message history: Success.[0m
[0m2022-03-27 11:29:08 V/Net 3237855048: Recv: friendlist.GetTroopListReqV2[0m
[0m2022-03-27 11:29:08 V/Net 3237855048: Send: friendlist.GetTroopMemberListReq(friendlist.GetTroopMemberListReq)[0m
[0m2022-03-27 11:29:08 V/Net 3237855048: Send: friendlist.GetTroopMemberListReq(friendlist.GetTroopMemberListReq)[0m
[0m2022-03-27 11:29:08 V/Net 3237855048: Send: friendlist.GetTroopMemberListReq(friendlist.GetTroopMemberListReq)[0m
[0m2022-03-27 11:29:08 V/Net 3237855048: Send: friendlist.GetTroopMemberListReq(friendlist.GetTroopMemberListReq)[0m
[0m2022-03-27 11:29:08 V/Net 3237855048: Recv: friendlist.GetTroopMemberListReq[0m
[0m2022-03-27 11:29:08 V/Net 3237855048: Recv: friendlist.GetTroopMemberListReq[0m
[0m2022-03-27 11:29:08 V/Net 3237855048: Recv: friendlist.GetTroopMemberListReq[0m
[92m2022-03-27 11:29:08 I/Net 3237855048: Successfully loaded group list: 4 in total.[0m
[0m2022-03-27 11:29:08 V/Net 3237855048: Recv: friendlist.GetTroopMemberListReq[0m
[92m2022-03-27 11:29:08 I/Net 3237855048: Scheduled key refresh in 23h 55min 0.0s.[0m
[92m2022-03-27 11:29:08 I/Net 3237855048: Scheduled refresh login session in 19d 23h 55min 0.0s.[0m
[0m2022-03-27 11:29:10 V/Net 3237855048: Saving bdh session to cache[0m
[0m2022-03-27 11:29:10 V/Net 3237855048: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2022-03-27 11:29:10 V/Net 3237855048: Recv: ConfigPushSvc.PushReq[0m
[0m2022-03-27 12:04:23 V/Net 3237855048: Send: LongConn.OffPicUp(LongConn.OffPicUp)[0m
[0m2022-03-27 12:04:23 V/Net 3237855048: Recv: LongConn.OffPicUp[0m
[0m2022-03-27 12:04:23 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 12:04:24 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 12:58:17 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 12:58:17 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 12:58:18 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 12:58:18 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 13:03:26 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 13:03:26 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 13:54:55 V/Net 3237855048: Send: ImgStore.GroupPicUp(ImgStore.GroupPicUp)[0m
[0m2022-03-27 13:54:55 V/Net 3237855048: Recv: ImgStore.GroupPicUp[0m
[0m2022-03-27 13:54:55 V/Net 3237855048: [Highway] Uploading group image to 180.102.111.81:80, size=9.3 KiB[0m
[0m2022-03-27 13:54:55 V/Net 3237855048: [Highway] Uploading group image: succeed at 37 KiB/s[0m
[0m2022-03-27 13:54:55 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 13:54:55 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 14:14:58 V/Net 3237855048: Send: ImgStore.GroupPicUp(ImgStore.GroupPicUp)[0m
[0m2022-03-27 14:14:58 V/Net 3237855048: Recv: ImgStore.GroupPicUp[0m
[0m2022-03-27 14:14:58 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 14:14:59 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 14:37:16 V/Net 3237855048: Send: ImgStore.GroupPicUp(ImgStore.GroupPicUp)[0m
[0m2022-03-27 14:37:16 V/Net 3237855048: [Highway] Uploading group image to 180.102.111.81:80, size=24.71 KiB[0m
[0m2022-03-27 14:37:16 V/Net 3237855048: Recv: ImgStore.GroupPicUp[0m
[0m2022-03-27 14:37:17 V/Net 3237855048: [Highway] Uploading group image: succeed at 58 KiB/s[0m
[0m2022-03-27 14:37:17 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 14:37:17 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 14:38:42 V/Net 3237855048: Send: ImgStore.GroupPicUp(ImgStore.GroupPicUp)[0m
[0m2022-03-27 14:38:42 V/Net 3237855048: Recv: ImgStore.GroupPicUp[0m
[0m2022-03-27 14:38:42 V/Net 3237855048: [Highway] Uploading group image to 180.102.111.81:80, size=2450.09 KiB[0m
[0m2022-03-27 14:38:44 V/Net 3237855048: [Highway] Uploading group image: succeed at 1401 KiB/s[0m
[0m2022-03-27 14:38:44 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 14:38:44 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 14:43:26 V/Net 3237855048: Send: ImgStore.GroupPicUp(ImgStore.GroupPicUp)[0m
[0m2022-03-27 14:43:26 V/Net 3237855048: [Highway] Uploading group image to 180.102.111.81:80, size=2919.91 KiB[0m
[0m2022-03-27 14:43:26 V/Net 3237855048: Recv: ImgStore.GroupPicUp[0m
[0m2022-03-27 14:43:28 V/Net 3237855048: [Highway] Uploading group image: succeed at 1460 KiB/s[0m
[0m2022-03-27 14:43:28 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 14:43:29 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 14:45:59 V/Net 3237855048: Send: ImgStore.GroupPicUp(ImgStore.GroupPicUp)[0m
[0m2022-03-27 14:45:59 V/Net 3237855048: Recv: ImgStore.GroupPicUp[0m
[0m2022-03-27 14:45:59 V/Net 3237855048: [Highway] Uploading group image to 180.102.111.81:80, size=435.83 KiB[0m
[0m2022-03-27 14:46:00 V/Net 3237855048: [Highway] Uploading group image: succeed at 447 KiB/s[0m
[0m2022-03-27 14:46:00 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 14:46:00 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 14:46:09 V/Net 3237855048: Send: ImgStore.GroupPicUp(ImgStore.GroupPicUp)[0m
[0m2022-03-27 14:46:09 V/Net 3237855048: Recv: ImgStore.GroupPicUp[0m
[0m2022-03-27 14:46:09 V/Net 3237855048: [Highway] Uploading group image to 180.102.111.81:80, size=109.06 KiB[0m
[0m2022-03-27 14:46:10 V/Net 3237855048: [Highway] Uploading group image: succeed at 310 KiB/s[0m
[0m2022-03-27 14:46:10 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 14:46:10 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 14:46:20 V/Net 3237855048: Send: ImgStore.GroupPicUp(ImgStore.GroupPicUp)[0m
[0m2022-03-27 14:46:20 V/Net 3237855048: Recv: ImgStore.GroupPicUp[0m
[0m2022-03-27 14:46:20 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 14:46:21 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 14:53:54 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 14:53:54 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 14:54:06 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 14:54:07 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 14:54:16 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 14:54:16 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 14:54:24 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 14:54:25 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 14:54:41 V/Net 3237855048: Send: ImgStore.GroupPicUp(ImgStore.GroupPicUp)[0m
[0m2022-03-27 14:54:41 V/Net 3237855048: Recv: ImgStore.GroupPicUp[0m
[0m2022-03-27 14:54:41 V/Net 3237855048: [Highway] Uploading group image to 180.102.111.81:80, size=137.67 KiB[0m
[0m2022-03-27 14:54:41 V/Net 3237855048: [Highway] Uploading group image: succeed at 261 KiB/s[0m
[0m2022-03-27 14:54:41 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 14:54:42 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 14:55:27 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 14:55:27 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 14:55:51 V/Net 3237855048: Send: ImgStore.GroupPicUp(ImgStore.GroupPicUp)[0m
[0m2022-03-27 14:55:51 V/Net 3237855048: Recv: ImgStore.GroupPicUp[0m
[0m2022-03-27 14:55:51 V/Net 3237855048: [Highway] Uploading group image to 180.102.111.81:80, size=82.01 KiB[0m
[0m2022-03-27 14:55:52 V/Net 3237855048: [Highway] Uploading group image: succeed at 151 KiB/s[0m
[0m2022-03-27 14:55:52 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 14:55:52 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[0m2022-03-27 14:56:34 V/Net 3237855048: Send: MessageSvc.PbSendMsg(MessageSvc.PbSendMsg)[0m
[0m2022-03-27 14:56:35 V/Net 3237855048: Recv: MessageSvc.PbSendMsg[0m
[91m2022-03-27 17:04:27 W/Net 3237855048: NettyChannelException(message=null, cause=null)
NettyChannelException(message=null, cause=null)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler.createConnection$lambda-3(NettyNetworkHandler.kt:162)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$$Lambda$430/0x00000000441ccea0.operationComplete(Unknown Source)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:552)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)
	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)
	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)
	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)
	at io.netty.channel.AbstractChannel$CloseFuture.setClosed(AbstractChannel.java:1186)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.doClose0(AbstractChannel.java:773)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:749)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:620)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.closeOnRead(AbstractNioByteChannel.java:105)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:174)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Unknown Source)
[0m
[0m2022-03-27 17:04:27 V/Net 3237855048: Loading server list from cache.[0m
[92m2022-03-27 17:04:27 I/Net 3237855048: Server list: 49.7.253.45:8080, 49.7.253.58:8080, 49.7.253.220:80, 183.47.102.218:443, 183.47.99.24:443, 180.109.52.200:8080, 180.163.212.180:14000, 49.7.253.215:80, 117.62.243.156:8080, msfwifi.3g.qq.com:8080.[0m
[92m2022-03-27 17:04:27 I/Net 3237855048: ECDH key is valid.[0m
[0m2022-03-27 17:04:27 V/Net 3237855048: Send: wtlogin.exchange_emp[0m
[0m2022-03-27 17:04:28 V/Net 3237855048: Recv: wtlogin.exchange_emp[0m
[0m2022-03-27 17:04:28 V/Net 3237855048: Send: StatSvc.register(online)[0m
[92m2022-03-27 17:04:28 I/Net 3237855048: Server time updated, serverTime: 1648400668, diff: 0ms=0.0s[0m
[92m2022-03-27 17:04:28 I/Net 3237855048: Scheduled refresh login session in 19d 23h 55min 0.0s.[0m
[92m2022-03-27 17:04:28 I/Net 3237855048: Scheduled key refresh in 23h 55min 0.0s.[0m
[0m2022-03-27 17:04:28 V/Net 3237855048: Recv: StatSvc.register[0m
[92m2022-03-27 17:04:31 I/Net 3237855048: Server list: 183.47.106.14:443, 49.7.253.43:8080, 42.81.192.181:80, 14.22.9.53:443, 49.7.253.141:80, 180.109.52.205:8080, 49.7.253.88:8080, msfwifi.3g.qq.com:8080, 180.163.212.164:8080, 117.62.243.213:14000.[0m
[0m2022-03-27 17:04:31 V/Net 3237855048: Saving bdh session to cache[0m
[0m2022-03-27 17:04:31 V/Net 3237855048: Saving server list to cache[0m
[0m2022-03-27 17:04:31 V/Net 3237855048: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2022-03-27 17:04:31 V/Net 3237855048: Recv: ConfigPushSvc.PushReq[0m
[0m2022-03-27 17:04:31 V/Net 3237855048: Saving bdh session to cache[0m
[0m2022-03-27 17:04:31 V/Net 3237855048: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2022-03-27 17:04:31 V/Net 3237855048: Recv: ConfigPushSvc.PushReq[0m
[91m2022-03-27 21:05:06 W/Net 3237855048: HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:349)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:349)
	at net.mamoe.mirai.internal.network.handler.NetworkHandlerSupport.setStateImpl$mirai_core(NetworkHandlerSupport.kt:251)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:395)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:348)
	at net.mamoe.mirai.internal.network.components.TimeBasedHeartbeatSchedulerImpl$launchHeartbeatJobAsync$1.invokeSuspend(HeartbeatScheduler.kt:108)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:750)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:678)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:665)
Caused by: PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	... 13 more
Caused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms
	at kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:184)
	at kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:154)
	at kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:502)
	at kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:279)
	at kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)
	at java.base/java.lang.Thread.run(Unknown Source)
[0m
[0m2022-03-27 21:05:06 V/Net 3237855048: Loading server list from cache.[0m
[92m2022-03-27 21:05:06 I/Net 3237855048: Server list: 183.47.106.14:443, 49.7.253.43:8080, 42.81.192.181:80, 14.22.9.53:443, 49.7.253.141:80, 180.109.52.205:8080, 49.7.253.88:8080, msfwifi.3g.qq.com:8080, 180.163.212.164:8080, 117.62.243.213:14000.[0m
[92m2022-03-27 21:05:06 I/Net 3237855048: ECDH key is invalid, start to fetch ecdh public key from server.[0m
[92m2022-03-27 21:05:07 I/Net 3237855048: Successfully fetched ecdh public key from server.[0m
[0m2022-03-27 21:05:07 V/Net 3237855048: Send: wtlogin.exchange_emp[0m
[0m2022-03-27 21:05:07 V/Net 3237855048: Recv: wtlogin.exchange_emp[0m
[0m2022-03-27 21:05:07 V/Net 3237855048: Send: StatSvc.register(online)[0m
[92m2022-03-27 21:05:08 I/Net 3237855048: Server time updated, serverTime: 1648415108, diff: 0ms=0.0s[0m
[92m2022-03-27 21:05:08 I/Net 3237855048: Scheduled key refresh in 23h 55min 0.0s.[0m
[92m2022-03-27 21:05:08 I/Net 3237855048: Scheduled refresh login session in 19d 23h 55min 0.0s.[0m
[0m2022-03-27 21:05:08 V/Net 3237855048: Recv: StatSvc.register[0m
[92m2022-03-27 21:05:11 I/Net 3237855048: Server list: 49.7.253.124:8080, 183.47.101.173:443, 101.91.37.175:14000, 42.81.184.253:80, msfwifi.3g.qq.com:8080, 117.62.242.214:8080, 114.222.112.229:8080, 49.7.253.88:8080, 49.7.253.45:80, 119.147.190.138:443.[0m
[0m2022-03-27 21:05:11 V/Net 3237855048: Saving bdh session to cache[0m
[0m2022-03-27 21:05:11 V/Net 3237855048: Saving server list to cache[0m
[0m2022-03-27 21:05:11 V/Net 3237855048: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2022-03-27 21:05:11 V/Net 3237855048: Recv: ConfigPushSvc.PushReq[0m
[0m2022-03-27 21:05:11 V/Net 3237855048: Saving bdh session to cache[0m
[0m2022-03-27 21:05:11 V/Net 3237855048: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2022-03-27 21:05:11 V/Net 3237855048: Recv: ConfigPushSvc.PushReq[0m
[91m2022-03-27 23:53:21 W/Net 3237855048: HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
HeartbeatFailedException: AliveHeartbeat, recoverable=true, cause=PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:349)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1$1.invoke(NettyNetworkHandler.kt:349)
	at net.mamoe.mirai.internal.network.handler.NetworkHandlerSupport.setStateImpl$mirai_core(NetworkHandlerSupport.kt:251)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:395)
	at net.mamoe.mirai.internal.network.impl.netty.NettyNetworkHandler$StateOK$heartbeatJobs$1.invoke(NettyNetworkHandler.kt:348)
	at net.mamoe.mirai.internal.network.components.TimeBasedHeartbeatSchedulerImpl$launchHeartbeatJobAsync$1.invokeSuspend(HeartbeatScheduler.kt:108)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.internal.ScopeCoroutine.afterResume(Scopes.kt:33)
	at kotlinx.coroutines.AbstractCoroutine.resumeWith(AbstractCoroutine.kt:102)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:46)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:750)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:678)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:665)
Caused by: PacketTimeoutException(message=Timeout receiving Heartbeat response, cause=kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms)
	... 13 more
Caused by: kotlinx.coroutines.TimeoutCancellationException: Timed out waiting for 5000 ms
	at kotlinx.coroutines.TimeoutKt.TimeoutCancellationException(Timeout.kt:184)
	at kotlinx.coroutines.TimeoutCoroutine.run(Timeout.kt:154)
	at kotlinx.coroutines.EventLoopImplBase$DelayedRunnableTask.run(EventLoop.common.kt:502)
	at kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:279)
	at kotlinx.coroutines.DefaultExecutor.run(DefaultExecutor.kt:108)
	at java.base/java.lang.Thread.run(Unknown Source)
[0m
[0m2022-03-27 23:53:21 V/Net 3237855048: Loading server list from cache.[0m
[92m2022-03-27 23:53:21 I/Net 3237855048: Server list: 49.7.253.124:8080, 183.47.101.173:443, 101.91.37.175:14000, 42.81.184.253:80, msfwifi.3g.qq.com:8080, 117.62.242.214:8080, 114.222.112.229:8080, 49.7.253.88:8080, 49.7.253.45:80, 119.147.190.138:443.[0m
[92m2022-03-27 23:53:21 I/Net 3237855048: ECDH key is valid.[0m
[0m2022-03-27 23:53:21 V/Net 3237855048: Send: wtlogin.exchange_emp[0m
[0m2022-03-27 23:53:22 V/Net 3237855048: Recv: wtlogin.exchange_emp[0m
[0m2022-03-27 23:53:22 V/Net 3237855048: Send: StatSvc.register(online)[0m
[92m2022-03-27 23:53:22 I/Net 3237855048: Server time updated, serverTime: 1648425202, diff: 0ms=0.0s[0m
[92m2022-03-27 23:53:22 I/Net 3237855048: Scheduled key refresh in 23h 55min 0.0s.[0m
[0m2022-03-27 23:53:22 V/Net 3237855048: Recv: StatSvc.register[0m
[92m2022-03-27 23:53:22 I/Net 3237855048: Scheduled refresh login session in 19d 23h 55min 0.0s.[0m
[92m2022-03-27 23:53:25 I/Net 3237855048: Server list: 119.147.190.138:443, 183.47.102.218:443, 49.7.253.141:80, 49.7.253.32:8080, 180.102.191.164:14000, 180.109.192.45:8080, msfwifi.3g.qq.com:8080, 49.7.253.45:8080, 101.91.40.60:8080, 49.7.253.45:80.[0m
[0m2022-03-27 23:53:25 V/Net 3237855048: Saving bdh session to cache[0m
[0m2022-03-27 23:53:25 V/Net 3237855048: Saving server list to cache[0m
[0m2022-03-27 23:53:25 V/Net 3237855048: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2022-03-27 23:53:25 V/Net 3237855048: Recv: ConfigPushSvc.PushReq[0m
[0m2022-03-27 23:53:25 V/Net 3237855048: Saving bdh session to cache[0m
[0m2022-03-27 23:53:25 V/Net 3237855048: Send: ConfigPushSvc.PushResp(ConfigPushSvc.PushResp)[0m
[0m2022-03-27 23:53:25 V/Net 3237855048: Recv: ConfigPushSvc.PushReq[0m
